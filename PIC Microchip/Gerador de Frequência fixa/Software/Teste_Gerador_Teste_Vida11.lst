CCS PCM C Compiler, Version 4.105, 5967               25-set-11 09:32

               Filename: Teste_Gerador_Teste_Vida11.lst

               ROM used: 350 words (34%)
                         Largest free fragment is 674
               RAM used: 17 (27%) at main() level
                         30 (47%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03C
0003:  NOP
0004:  BTFSC  03.5
0005:  GOTO   00A
0006:  MOVWF  24
0007:  SWAPF  03,W
0008:  MOVWF  25
0009:  GOTO   00F
000A:  BCF    03.5
000B:  MOVWF  24
000C:  SWAPF  03,W
000D:  MOVWF  25
000E:  BSF    25.1
000F:  MOVF   0A,W
0010:  MOVWF  2B
0011:  CLRF   0A
0012:  BCF    03.7
0013:  SWAPF  24,F
0014:  MOVF   04,W
0015:  MOVWF  26
0016:  MOVF   20,W
0017:  MOVWF  27
0018:  MOVF   21,W
0019:  MOVWF  28
001A:  MOVF   22,W
001B:  MOVWF  29
001C:  MOVF   23,W
001D:  MOVWF  2A
001E:  BCF    03.5
001F:  MOVLW  8C
0020:  MOVWF  04
0021:  BTFSS  00.0
0022:  GOTO   025
0023:  BTFSC  0C.0
0024:  GOTO   042
0025:  BTFSS  0B.5
0026:  GOTO   029
0027:  BTFSC  0B.2
0028:  GOTO   05E
0029:  MOVF   26,W
002A:  MOVWF  04
002B:  MOVF   27,W
002C:  MOVWF  20
002D:  MOVF   28,W
002E:  MOVWF  21
002F:  MOVF   29,W
0030:  MOVWF  22
0031:  MOVF   2A,W
0032:  MOVWF  23
0033:  MOVF   2B,W
0034:  MOVWF  0A
0035:  SWAPF  25,W
0036:  MOVWF  03
0037:  BCF    03.5
0038:  SWAPF  24,W
0039:  BTFSC  25.1
003A:  BSF    03.5
003B:  RETFIE
003C:  CALL   3FF
003D:  BSF    03.5
003E:  MOVWF  10
003F:  MOVLW  00
0040:  MOVWF  0A
0041:  GOTO   091
....................       #include "C:\Documents and Settings\flavif03\Desktop\Programa PIC em C\Teste_Gerador_Teste_Vida11\Teste_Gerador_Teste_Vida11.h" 
.................... #include <12F675.h> 
.................... //////// Standard Header file for the PIC12F675 device //////////////// 
.................... #list 
....................  
.................... #device adc=8 
....................  
....................  
.................... #FUSES INTRC_IO 
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOMCLR                   //Master Clear pin used for I/O 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... //#FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES XT 
.................... #FUSES LP 
.................... #FUSES INTRC 
.................... #FUSES CPD 
.................... #FUSES BROWNOUT                //Reset when brownout detected 
....................   
.................... #use delay(clock=4000000) 
....................  
....................  
....................        
....................       int16   aux; 
....................      
....................       Unsigned int8 conta, filtro ; 
....................      
....................        
....................       #priority TIMER1 , RTCC 
....................         
....................       #int_TIMER1 
....................         
....................       void  TIMER1_isr(void ) 
....................       {  
....................        
....................        if (aux>=3035) 
*
0042:  MOVF   2D,W
0043:  SUBLW  0A
0044:  BTFSC  03.0
0045:  GOTO   057
0046:  XORLW  FF
0047:  BTFSS  03.2
0048:  GOTO   04D
0049:  MOVF   2C,W
004A:  SUBLW  DA
004B:  BTFSC  03.0
004C:  GOTO   057
....................             { 
....................             set_timer1 (aux); 
004D:  MOVF   2D,W
004E:  MOVWF  0F
004F:  MOVF   2C,W
0050:  MOVWF  0E
....................             output_toggle(pin_A2); 
0051:  BSF    03.5
0052:  BCF    05.2
0053:  MOVLW  04
0054:  BCF    03.5
0055:  XORWF  05,F
....................           
....................             } 
....................          else  
0056:  GOTO   05B
....................             { 
....................             output_low(pin_A2); 
0057:  BSF    03.5
0058:  BCF    05.2
0059:  BCF    03.5
005A:  BCF    05.2
....................            }  
....................       } 
....................        
005B:  BCF    0C.0
005C:  BCF    0A.3
005D:  GOTO   029
....................       #int_RTCC 
....................        
....................       void RTCC_isr(void)  //entra nesta interrupção a cada 33mS 
....................        
....................       { 
....................          conta++; 
005E:  INCF   2E,F
....................          if (conta>=15) 
005F:  MOVF   2E,W
0060:  SUBLW  0E
0061:  BTFSC  03.0
0062:  GOTO   069
....................             { 
....................             output_toggle(PIN_A1);  
0063:  BSF    03.5
0064:  BCF    05.1
0065:  MOVLW  02
0066:  BCF    03.5
0067:  XORWF  05,F
....................             conta=0; 
0068:  CLRF   2E
....................             } 
....................        
....................       } 
....................  
....................             
....................        
0069:  BCF    0B.2
006A:  BCF    0A.3
006B:  GOTO   029
....................       void main() 
....................       { 
*
0091:  CLRF   04
0092:  MOVLW  1F
0093:  ANDWF  03,F
0094:  BCF    1F.6
0095:  BSF    03.5
0096:  BCF    1F.0
0097:  BCF    1F.1
0098:  BCF    1F.2
0099:  BCF    1F.3
009A:  MOVLW  07
009B:  BCF    03.5
009C:  MOVWF  19
....................           
....................           
....................         
....................          setup_adc_ports(sAN0|VSS_VDD); 
009D:  BCF    1F.6
009E:  BSF    03.5
009F:  BSF    1F.0
00A0:  BCF    1F.1
00A1:  BCF    1F.2
00A2:  BCF    1F.3
....................          setup_adc(ADC_CLOCK_DIV_64); 
00A3:  BCF    1F.4
00A4:  BSF    1F.5
00A5:  BSF    1F.6
00A6:  BCF    03.5
00A7:  BCF    1F.7
00A8:  BSF    1F.0
....................          setup_timer_0(RTCC_INTERNAL|RTCC_DIV_128); 
00A9:  BSF    03.5
00AA:  MOVF   01,W
00AB:  ANDLW  C0
00AC:  IORLW  06
00AD:  MOVWF  01
....................           
....................          setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
00AE:  MOVLW  35
00AF:  BCF    03.5
00B0:  MOVWF  10
....................          setup_vref(FALSE); 
00B1:  BSF    03.5
00B2:  CLRF   19
....................          enable_interrupts(INT_TIMER1); 
00B3:  BSF    0C.0
....................          enable_interrupts(GLOBAL); 
00B4:  MOVLW  C0
00B5:  BCF    03.5
00B6:  IORWF  0B,F
....................         // set_tris_a (0b00001111); 
....................        
....................        
....................         int16 FreqSelecionada; 
....................         int16 tempo; 
....................         int8 incrementa,  setup=0, pic_desligado=0, parte1, parte2 ; 
00B7:  CLRF   35
00B8:  CLRF   36
....................          
....................         while(true) 
....................                  
....................         { 
....................             if (pic_desligado==0) 
00B9:  MOVF   36,F
00BA:  BTFSS  03.2
00BB:  GOTO   0D1
....................                {  
....................                                      
....................                   parte2 = read_eeprom(0x00); 
00BC:  BSF    03.5
00BD:  CLRF   1B
00BE:  BCF    1C.7
00BF:  BSF    1C.0
00C0:  MOVF   1A,W
00C1:  BCF    03.5
00C2:  MOVWF  38
....................                   parte1 = read_eeprom(0x08); 
00C3:  MOVLW  08
00C4:  BSF    03.5
00C5:  MOVWF  1B
00C6:  BCF    1C.7
00C7:  BSF    1C.0
00C8:  MOVF   1A,W
00C9:  BCF    03.5
00CA:  MOVWF  37
....................                   aux = Make16(parte1,parte2); 
00CB:  MOVF   37,W
00CC:  MOVWF  2D
00CD:  MOVF   38,W
00CE:  MOVWF  2C
....................                   pic_desligado=1; 
00CF:  MOVLW  01
00D0:  MOVWF  36
....................                }  
....................                 
....................                 FreqSelecionada=0; //força esta varialver para 0 antes de entrar no for                             
00D1:  CLRF   31
00D2:  CLRF   30
....................             for ( incrementa=0; incrementa<10; incrementa++)//Faz um loop para média 
00D3:  CLRF   34
00D4:  MOVF   34,W
00D5:  SUBLW  09
00D6:  BTFSS  03.0
00D7:  GOTO   0E1
....................              { 
....................                 FreqSelecionada = FreqSelecionada + read_adc();//soma porta analogica 10 vezes 
00D8:  BSF    1F.1
00D9:  BTFSC  1F.1
00DA:  GOTO   0D9
00DB:  MOVF   1E,W
00DC:  ADDWF  30,F
00DD:  BTFSC  03.0
00DE:  INCF   31,F
....................              }  
00DF:  INCF   34,F
00E0:  GOTO   0D4
....................                
....................                FreqSelecionada = FreqSelecionada/10;// Faz a média 
00E1:  MOVF   31,W
00E2:  MOVWF  3A
00E3:  MOVF   30,W
00E4:  MOVWF  39
00E5:  CLRF   3C
00E6:  MOVLW  0A
00E7:  MOVWF  3B
00E8:  CALL   06C
00E9:  MOVF   22,W
00EA:  MOVWF  31
00EB:  MOVF   21,W
00EC:  MOVWF  30
....................                 
....................            if (FreqSelecionada>=250)FreqSelecionada=250; 
00ED:  MOVF   31,F
00EE:  BTFSS  03.2
00EF:  GOTO   0F4
00F0:  MOVF   30,W
00F1:  SUBLW  F9
00F2:  BTFSC  03.0
00F3:  GOTO   0F7
00F4:  CLRF   31
00F5:  MOVLW  FA
00F6:  MOVWF  30
....................            if (setup==2) setup=0 ;     
00F7:  MOVF   35,W
00F8:  SUBLW  02
00F9:  BTFSC  03.2
00FA:  CLRF   35
....................            if (setup==1) 
00FB:  DECFSZ 35,W
00FC:  GOTO   147
....................                   { 
....................                   tempo = 62500/FreqSelecionada; 
00FD:  MOVLW  F4
00FE:  MOVWF  3A
00FF:  MOVLW  24
0100:  MOVWF  39
0101:  MOVF   31,W
0102:  MOVWF  3C
0103:  MOVF   30,W
0104:  MOVWF  3B
0105:  CALL   06C
0106:  MOVF   22,W
0107:  MOVWF  33
0108:  MOVF   21,W
0109:  MOVWF  32
....................                   aux = 65535 - tempo; 
010A:  MOVF   32,W
010B:  SUBLW  FF
010C:  MOVWF  2C
010D:  MOVLW  FF
010E:  MOVWF  2D
010F:  MOVF   33,W
0110:  BTFSS  03.0
0111:  INCFSZ 33,W
0112:  SUBWF  2D,F
....................                   
....................                                                     
....................                    write_eeprom(0x00,make8(aux,0)); 
0113:  MOVF   2C,W
0114:  MOVWF  39
0115:  BSF    03.5
0116:  CLRF   1B
0117:  BCF    03.5
0118:  MOVF   39,W
0119:  BSF    03.5
011A:  MOVWF  1A
011B:  BSF    1C.2
011C:  BCF    03.5
011D:  MOVF   0B,W
011E:  MOVWF  20
011F:  BCF    0B.7
0120:  BSF    03.5
0121:  MOVLW  55
0122:  MOVWF  1D
0123:  MOVLW  AA
0124:  MOVWF  1D
0125:  BSF    1C.1
0126:  BTFSC  1C.1
0127:  GOTO   126
0128:  BCF    1C.2
0129:  BCF    03.5
012A:  MOVF   20,W
012B:  IORWF  0B,F
....................                    write_eeprom(0x08,make8(aux,1)); 
012C:  MOVF   2D,W
012D:  MOVWF  39
012E:  MOVLW  08
012F:  BSF    03.5
0130:  MOVWF  1B
0131:  BCF    03.5
0132:  MOVF   39,W
0133:  BSF    03.5
0134:  MOVWF  1A
0135:  BSF    1C.2
0136:  BCF    03.5
0137:  MOVF   0B,W
0138:  MOVWF  20
0139:  BCF    0B.7
013A:  BSF    03.5
013B:  MOVLW  55
013C:  MOVWF  1D
013D:  MOVLW  AA
013E:  MOVWF  1D
013F:  BSF    1C.1
0140:  BTFSC  1C.1
0141:  GOTO   140
0142:  BCF    1C.2
0143:  BCF    03.5
0144:  MOVF   20,W
0145:  IORWF  0B,F
....................                                  
....................                   conta++; 
0146:  INCF   2E,F
....................                   } 
....................                       
....................                  if ((input(pin_a3))&&(!filtro)) 
0147:  BSF    03.5
0148:  BSF    05.3
0149:  BCF    03.5
014A:  BTFSS  05.3
014B:  GOTO   152
014C:  MOVF   2F,F
014D:  BTFSS  03.2
014E:  GOTO   152
....................                                   
....................                   { 
....................                        filtro=1;              
014F:  MOVLW  01
0150:  MOVWF  2F
....................                   } 
....................                   else if (!input(pin_a3)&&(filtro)) 
0151:  GOTO   15C
0152:  BSF    03.5
0153:  BSF    05.3
0154:  BCF    03.5
0155:  BTFSC  05.3
0156:  GOTO   15C
0157:  MOVF   2F,F
0158:  BTFSC  03.2
0159:  GOTO   15C
....................                      { 
....................                        filtro=0;                  
015A:  CLRF   2F
....................                        setup++;  
015B:  INCF   35,F
....................                      } 
....................                   
....................                   
....................                 
....................          }    
015C:  GOTO   0B9
....................             
....................       }   
....................        
015D:  SLEEP

Configuration Fuses:
   Word  1: 00D5   NOWDT CPD NOPROTECT NOMCLR NOPUT INTRC BROWNOUT
